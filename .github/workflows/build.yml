name: Build/release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - dev

jobs:
  Build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci

      - name: Build Blix Plugins
        run: node ./scripts/plugins.js

      - name: Build/Release Blix
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            npm run dist -- --linux deb AppImage --x64 --arm64
            # npm run dist -- --linux deb --x64 --arm64
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run dist -- --windows nsis
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            # npm run dist -- --mac dmg --x64 --arm64
            npm run dist -- --mac dmg --arm64
          fi
        env:
          GH_TOKEN: ${{ secrets.TEST_TOKEN }}
        shell: bash

    timeout-minutes: 30